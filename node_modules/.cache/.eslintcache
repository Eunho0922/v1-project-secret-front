[{"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/index.jsx":"1","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/reportWebVitals.jsx":"2","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/request/Done.jsx":"3","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/request/Request.jsx":"4","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/manage/ProjectApprove.jsx":"5","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/manage/ProjectList.jsx":"6","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/util/cookie.jsx":"7","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/manage/Login.jsx":"8"},{"size":1180,"mtime":1700444022201,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1698469256291,"results":"11","hashOfConfig":"10"},{"size":1285,"mtime":1700443991766,"results":"12","hashOfConfig":"10"},{"size":8895,"mtime":1700444022202,"results":"13","hashOfConfig":"10"},{"size":5918,"mtime":1700444022201,"results":"14","hashOfConfig":"10"},{"size":6924,"mtime":1700444022202,"results":"15","hashOfConfig":"10"},{"size":506,"mtime":1700444022202,"results":"16","hashOfConfig":"10"},{"size":1119,"mtime":1700444022202,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1usk3ip",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/index.jsx",[],[],"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/reportWebVitals.jsx",[],[],["44"],"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/request/Done.jsx",[],[],"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/request/Request.jsx",[],[],"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/manage/ProjectApprove.jsx",[],[],"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/manage/ProjectList.jsx",["45","46"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getSecretCookie, resetSecretCookie } from '../util/cookie';\n\nexport const TableHeaderCell = ({ value }) => {\n  return (\n    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n      {value}\n    </th>\n  );\n};\n\nexport const TableDataCell = ({ value, link }) => {\n  return (\n    <td className=\"px-6 py-4 whitespace-nowrap\">\n      {link ? <a href={link}>{value}</a> : value}\n    </td>\n  );\n};\n\nexport const Checkbox = ({isChecked}) => {\n  return (\n    <>\n      <input\n        className=\"ml-[5px] transform scale-150\"\n        type=\"checkbox\"\n        checked={isChecked}\n      />\n    </>\n  )\n}\n\nexport const ProjectList = () => {\n\n  const [data, setData] = useState([]);\n  const [selected, setSelected] = useState([])\n  const [progress, setProgress] = useState('')\n  const [isProgressing, setIsProgressing] = useState(false)\n  const [progressed, setProgressed] = useState([]);\n\n  const [secret, setSecret] = useState('');\n  const [fetchError, setFetchError] = useState('');\n\n  useEffect(() => {\n    setSecret(getSecretCookie())\n  }, []);\n\n  useEffect(() => {\n    const url = 'https://prod-server.xquare.app/project-secret-manager/project?secret=' + secret\n    console.log(url)\n    axios.get(url)\n      .then((res) => {setData(res.data); setFetchError(\"\")})\n      .catch((err) => {\n        if (data.length == 0) { setFetchError(\"권한이 없습니다\")}\n      });\n  }, [secret]);\n\n  const regenerateProjectSecret = async () => {\n    if (isProgressing) return;\n    setIsProgressing(true)\n    setProgress('발급중...')\n\n    selected.forEach(async (it) => {\n      const url = 'https://prod-server.xquare.app/project-secret-manager/project/' + it.id + '/access-key?secret=' + secret\n      await axios.patch(url)\n        .then((res) => {\n          setProgressed([...progressed, it]);\n          if (progressed.length === selected.length) {\n            setProgressed([]);\n            setProgress('재발급 완료!')\n            setIsProgressing(false)\n          } \n        })\n        .catch((err) => {\n          setProgressed([]);\n          setSelected([]);\n          setProgress('재발급 실패 ' + err)\n          setIsProgressing(false)\n        });\n    })\n\n    setProgress('재발급 완료!')\n    setIsProgressing(false)\n  }\n\n  const deleteProject = async () => {\n    if (isProgressing) return;\n\n    selected.forEach(async (it) => {\n\n      setProgress('삭제중...')\n      setIsProgressing(true)\n      const url = 'https://prod-server.xquare.app/project-secret-manager/project/' + it.id + '?secret=' + secret\n      await axios.delete(url)\n        .then((res) => {\n          setProgressed([...progressed, it]);\n          if (progressed.length === selected.length) {\n            setProgressed([]);\n            setProgress('삭제 완료!')\n            setIsProgressing(false)\n          } \n        })\n        .catch((err) => {\n          setProgressed([]);\n          setSelected([]);\n          setProgress('삭제 실패 ' + err)\n          setIsProgressing(false)\n        });\n    })\n    \n    setProgress('삭제 완료!')\n    setIsProgressing(false)\n    setData([])\n  }\n\n  const toggleSelect = async (item) => {\n    if (isProgressing) return;\n    selected.some((it) => it.id === item.id) ?\n      setSelected(selected.filter(it => it.id !== item.id)) : setSelected([...selected, item])\n  }\n\n  const selectColor = (isSelected) => isSelected ? 'bg-blue-200' : 'bg-white'\n\n  return (\n    <div className=\"bg-gray-100 p-4\">\n      <h1 className=\"text-[20px] font-bold mb-4\">등록된 프로젝트 목록 ({data.filter((item) => item.isApproved).length})</h1>\n      <a href={\"/admin/approve?secret=\" + secret}>\n        <h1 className=\"text-[20px] text-slate-400 font-bold mb-4\">요청된 프로젝트 목록 ({data.filter((item) => !item.isApproved).length})</h1>\n      </a>\n      <div>\n        <div\n          className=\"px-4 py-2 mt-6 w-fit outline outline-2 outline-blue-500 text-blue-500 rounded-md hover:outline-blue-800 hover:text-blue-800\"\n          onClick={() => setSelected([]) }\n        >\n          선택 초기화\n        </div>\n        <div className='absolute right-6 top-[90px] flex flex-row gap-[10px]'>\n          <div className='w-fit px-4 py-2 mt-6 text-black rounded-md'>\n            {progress}\n          </div>\n          <div\n            className=\"w-fit px-4 py-2 mt-6 text-white bg-blue-500 rounded-md hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\n            onClick={() => regenerateProjectSecret() }\n          >\n            재발급\n          </div>\n          <div\n            className=\"w-fit px-4 py-2 mt-6 text-white bg-red-500 rounded-md hover:bg-red-700 focus:outline-none focus:shadow-outline\"\n            onClick={() => deleteProject() }\n          >\n            삭제\n          </div>\n        </div>\n      </div>\n      <table className=\"min-w-full divide-y divide-gray-200\">\n        <thead className=\"bg-gray-50\">\n          <tr>\n            <TableHeaderCell value=\"이름\" />\n            <TableHeaderCell value=\"영어이름\" />\n            <TableHeaderCell value=\"레포지토리\" />\n            <TableHeaderCell value=\"타입\" />\n            <TableHeaderCell value=\"생성일\" />\n            <TableHeaderCell value=\"최종배포일\" />\n            <TableHeaderCell value=\"최종배포성공여부\" />\n            <TableHeaderCell value=\"팀\" />\n            <TableHeaderCell value=\"레디스 사용\" />\n            <TableHeaderCell value=\"MySQL 사용\" />\n            <TableHeaderCell value=\"담당자 이메일\" />\n          </tr>\n        </thead>\n        <tbody className=\"bg-white divide-y divide-gray-200\">\n          {data\n            .filter((item) => item.isApproved)\n            .map((item) => \n              <tr \n                className={selectColor(selected.some((it) => it.id === item.id))}\n                key={item.id}\n                onClick={() => toggleSelect(item)}\n              >\n                <TableDataCell value={item.nameKo} />\n                <TableDataCell value={item.nameEn} />\n                <TableDataCell value={item.repository} link={\"https://github.com/\" + item.repository} />\n                <TableDataCell value={item.type} />\n                <TableDataCell value={item.createAt} />\n                <TableDataCell value={item.lastUsedAt} />\n                <TableDataCell value={<Checkbox isChecked={item.lastRequestSucceed}/>}/>\n                <TableDataCell value={item.team} />\n                <TableDataCell value={<Checkbox isChecked={item.useRedis}/>}/>\n                <TableDataCell value={<Checkbox isChecked={item.useMysql}/>}/>\n                <TableDataCell value={item.email} />\n              </tr>\n            )\n          }\n        </tbody>\n      </table>\n      {fetchError && <>{fetchError}</>}\n      <div onClick={() => resetSecretCookie()}>\n        로그아웃\n      </div>\n    </div>\n  );\n}\n","/Users/rlaisqls/Documents/github/v1-project-secret-front/src/util/cookie.jsx",[],[],"/Users/rlaisqls/Documents/github/v1-project-secret-front/src/manage/Login.jsx",[],[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":54,"column":25,"nodeType":"51","messageId":"52","endLine":54,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":56,"column":6,"nodeType":"55","endLine":56,"endColumn":14,"suggestions":"56"},"no-new-object",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.length'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-object-constructor",{"desc":"59","fix":"60"},"Update the dependencies array to be: [data.length, secret]",{"range":"61","text":"62"},[1493,1501],"[data.length, secret]"]